---
title: "Como usar quarto"
author: "Nayeli Calderon"
format: 
  html:
    toc: true
    toc-location: left
    number-sections: true
    embed_resources: true
    output-file: index
editor_options: 
  chunk_output_type: console
---

# Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the *Render* button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

{r}
1 + 1


You can add options to executable code like this

{r}
#| echo: false
2 * 2


The echo: false option disables the printing of code (only output is displayed).


# como usar quarto?
## fuentes

- negrita: *esto es fuente negrita*
- cursiva: _solanum tuberosum_


## formulas matematicas 

Area de una circunferencia $Area_{circunferencia}=pi.r^2$

esta es una formula cualquiera $$k=\frac{\left(2x-1\right)^2-1}{4}"$$



# Mi primera pagina web
1. Tener mi proyecto
1. Conectar mi proyecto a GitHub 
1. Tener un archivo en formato html llamado 'index.html'
1. Hacer push al repositorio
1. Activar GitHub Pages

#Modelo lineal
##Importar data
```{r}

library(googlesheets4)
library(tidyverse)
 url<- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=172957346#gid=172957346"
 
 gs <- as_sheets_id(url)
 fb <- gs %>%
   range_read("fb")
source('https://inkaverse.com/setup.r')
 
```
#modelo lineal
```{r}
modelo <- lm(formula = lfa ~ bloque + geno + riego + riego*geno, data = fb)
anova(modelo)
```
## box plot

```{r}
# Boxplot de LFA por Genotipo y Riego
ggplot(fb, aes(x = factor(geno), y = lfa, fill = factor(riego))) +
  geom_boxplot() +
  labs(x = "Genotipo", y = "LFA", fill = "Riego") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  ggtitle("Boxplot de LFA por Genotipo y Riego")

2
```
##Comparación de medias
```{r}
library(agricolae)
# Test de Tukey para el factor "riego"
tukey_riego <- HSD.test(modelo, "riego", group = TRUE)
print(tukey_riego)

# Test de Tukey para el factor "geno"
tukey_geno <- HSD.test(modelo, "geno", group = TRUE)
print(tukey_geno)

# Test de Tukey para la interacción 'riego:geno'
tukey_interaccion <- HSD.test(modelo, c("riego", "geno"), group = TRUE)
print(tukey_interaccion)

str(tukey_interaccion)

mc <-tukey_interaccion$groups %>% 
  rownames_to_column("trat") %>%
  separate(trat, c("riego", "variedad"))

str(mc)
```

###Gráfico en ggplot2
```{r}
ggplot(mc, aes(x = variedad, y = lfa, fill = riego)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  geom_text(aes(label = groups), position = position_dodge(width = 1), vjust = -0.1) +
  labs(title = "Producción por Variedad y Riego", 
       x = "Variedad", 
       y = "LFA") +
  theme_minimal()
```
##Comaparación de medias: emmeans
```{r}
library(emmeans)

mc <- emmeans(modelo, ~ riego * geno)
mc <- emmeans(modelo, ~ riego + geno)
mc <- emmeans(modelo, ~ geno | riego)%>% 
as.data.frame(mc)

mc

```
###Plot

```{r}
ggplot(mc, aes(x = geno, y = emmean, fill = riego)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  # geom_text(aes(label = emmean), position = position_dodge(0.9), vjust = -0.5) +
  labs(x = "Variedad", y = "LFA", fill = "Riego") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

